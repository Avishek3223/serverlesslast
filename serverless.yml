service: notes-api

package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs14.x
  stage: prod
  region: us-east-1

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    tableName: notes

  # 'iam' section defines the permission policy for the Lambda function.
  # In this case, Lambda functions are granted permissions to access DynamoDB.
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeTable
          Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: URL path is /notes
  # - method: POST request
  # - authorizer: authenticate using the AWS IAM role
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          authorizer: aws_iam

  # Defines an HTTP API endpoint that calls the main function in get.js
  # - path: URL path is /notes/{id}
  # - method: GET request
  get:
    handler: get.main
    events:
      - http:
          path: notes/{id}
          method: get
          authorizer: aws_iam

  # Defines an HTTP API endpoint that calls the main function in list.js
  # - path: URL path is /notes
  # - method: GET request
  list:
    handler: list.main
    events:
      - http:
          path: notes
          method: get
          authorizer: aws_iam

  # Defines an HTTP API endpoint that calls the main function in update.js
  # - path: URL path is /notes/{id}
  # - method: PUT request
  update:
    handler: update.main
    events:
      - http:
          path: notes/{id}
          method: put
          authorizer: aws_iam

  # Defines an HTTP API endpoint that calls the main function in delete.js
  # - path: URL path is /notes/{id}
  # - method: DELETE request
  delete:
    handler: delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          authorizer: aws_iam
